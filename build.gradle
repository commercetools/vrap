buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "io.ratpack:ratpack-gradle:1.5.4"
        classpath "com.github.jengelman.gradle.plugins:shadow:1.2.3"
        classpath "se.transmode.gradle:gradle-docker:1.2"
    }
}

plugins {
    id "com.moowork.node" version "1.2.0"
}

ext {
    versions = [
            log4j  : "2.6.2",
            ratpack: '1.5.4',
            slf4j  : "1.7.21",
            spock  : "1.0-groovy-2.4",
            rmf : "0.1.0-20180304205259"
    ]
}

apply plugin: 'java'
apply plugin: 'groovy'

if (!JavaVersion.current().java8Compatible) {
    throw new IllegalStateException("Must be built with Java 8 or higher")
}

apply plugin: "io.ratpack.ratpack-java"
apply plugin: "idea"
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "docker"

repositories {
    jcenter()
    maven {
        url 'https://dl.bintray.com/vrapio/vrapio'
    }
}

node {
    // Set the work directory for NPM
    npmWorkDir = file("${project.buildDir}/npm")

    // Set the work directory for Yarn
    yarnWorkDir = file("${project.buildDir}/yarn")

    // Set the work directory where node_modules should be located
    nodeModulesDir = file("${project.projectDir}/src/ratpack/assets")
}

dependencies {
    testCompile 'com.tngtech.java:junit-dataprovider:1.12.0'

    compile "io.vrap.rmf:raml-model:${versions.rmf}"

    compile 'org.webjars.npm:api-console:3.0.4'

    compile 'commons-cli:commons-cli:1.4'
    compile 'org.raml:raml-parser-2:1.0.15'
    compile ratpack.dependency('handlebars')

    compile 'org.assertj:assertj-core:3.6.2'

    runtime "org.apache.logging.log4j:log4j-slf4j-impl:${versions.log4j}"
    runtime "org.apache.logging.log4j:log4j-api:${versions.log4j}"
    runtime "org.apache.logging.log4j:log4j-core:${versions.log4j}"
    runtime 'com.lmax:disruptor:3.3.2'

    testCompile "org.spockframework:spock-core:${versions.spock}"
}

mainClassName = "io.vrap.VrapApp"

run {
    if (project.hasProperty("cliArgs")) {
        args(cliArgs.split(","))
    }
}


task copyConsolePatch(dependsOn: npmInstall, type: Copy) {
    from "src/ratpack/assets/oauth2-authorization.html"
    into "src/ratpack/assets/bower_components/oauth-authorization"
}

processResources.dependsOn(copyConsolePatch)

task buildDocker(type: Docker) {
    baseImage = 'openjdk:8-jre-alpine'
    maintainer = 'Matthias KÃ¶ster "matthias.koester@gmail.com"'
    tag = 'vrap'
    addFile {
        from shadowJar
        rename {
            'vrap.jar'
        }
    }

    exposePort(5050)

    entryPoint(["java", "-jar", "/vrap.jar"])
}

buildDocker.dependsOn(shadowJar)
