<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, minimum-scale=1, initial-scale=1, user-scalable=yes" />
    <title>API documentation</title>
    <link rel="import" href="assets/bower_components/api-console/api-console.html" />
    {{#unless jsonFile}}
    <link rel="import" href="assets/bower_components/raml-json-enhance/raml-json-enhance.html" />
    <script src="assets/bower_components/raml-1-parser-browser/browser_version/index.js"></script>
    {{/unless}}
  </head>
<body>
  {{#unless jsonFile}}
  <raml-json-enhance></raml-json-enhance>
  {{/unless}}
  {{#if jsonFile}}
  <api-console json-file="{{jsonFile}}"></api-console>
  {{else}}
  <api-console></api-console>
  {{/if}}
  {{#unless jsonFile}}
  <script>
  window.addEventListener('raml-json-enhance-ready', function(e) {
    // The e.detail.json contains the final JavaScript object
    var apiConsole = document.querySelector('api-console');
    apiConsole.raml = e.detail.json;

  });
  function init() {
      RAML.Parser.loadApi("http://{{proxyHost}}:{{proxyPort}}/{{ramlPath}}{{queryParams}}").then(function(api) {
           console.log("api parsed");
           var enhancer = document.querySelector('raml-json-enhance');
           enhancer.json = api.expand(true)
                .toJSON({
                    dumpSchemaContents: false,
                    rootNodeDetails: true,
                    serializeMetadata: false
                }).specification;
      });

  };
  window.addEventListener('WebComponentsReady', init);

        // Load webcomponentsjs polyfill if browser does not support native Web Components
        (function() {
          'use strict';
          var onload = function() {
            // For native Imports, manually fire WebComponentsReady so user code
            // can use the same code path for native and polyfill'd imports.
            if (!window.HTMLImports) {
              document.dispatchEvent(
                new CustomEvent('WebComponentsReady', {bubbles: true})
              );
            }
          };

          var webComponentsSupported = (
            'registerElement' in document &&
            'import' in document.createElement('link') &&
            'content' in document.createElement('template')
          );

          if (!webComponentsSupported) {
            var script = document.createElement('script');
            script.async = true;
            script.src = 'assets/bower_components/webcomponentsjs/webcomponents-lite.min.js';
            script.onload = onload;
            document.head.appendChild(script);
          } else {
            onload();
          }
        })();
  </script>
  {{/unless}}
</body>
</html>